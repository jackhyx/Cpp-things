## 什么是TCP粘包/拆包？发生的原因？

# 拆包：一个完整的业务可能会被TCP拆分成多个包进行发送
# 粘包：也有可能把多个小的包封装成一个大的数据包发送

# 原因
# 应用程序写入数据的字节大小大于套接字发送缓冲区的大小.
# 进行MSS大小的TCP分段。( MSS=TCP报文段长度-TCP首部长度)
# 以太网的payload大于MTU进行IP分片。（ MTU指：一种通信协议的某一层上面所能通过的最大数据包大小。）

# 解决方案
# 消息定长。
# 在包尾部增加回车或者空格符等特殊字符进行分割
# 将消息分为消息头和消息尾
# 使用其它复杂的协议，如RTMP协议等。

## 为什么服务器会有 # 缓存 #这一项功能？如何实现的？

# 原因
# 缓解服务器压力；
# 降低客户端获取资源的延迟：缓存通常位于内存中，读取缓存的速度更快
并且缓存服务器在地理位置上也有可能比源服务器来得近，例如# 浏览器缓存。

# 实现方法
# 让代理服务器进行缓存；
# 让客户端浏览器进行缓存。

# HTTP请求方法你知道多少？

# 客户端发送的# 请求报文 # 第一行为 # 请求行 #包含了方法字段。

根据 HTTP 标准，HTTP 请求可以使用多种请求方法。

# HTTP1.0 定义了三种请求方法： GET, POST 和 HEAD方法。
# GET	请求指定的页面信息，并返回实体主体。
# HEAD	类似于 GET 请求，只不过返回的响应中没有具体的内容，用于获取报头
# POST	向指定资源提交数据进行处理请求（例如提交表单或者上传文件）。数据被包含在请求体中。POST 请求可能会导致新的资源的建立和/或已有资源的修改。

# HTTP1.1 新增了六种请求方法：OPTIONS、PUT、PATCH、DELETE、TRACE 和 CONNECT 方法。

序 号	方法	描述
1	GET	请求指定的页面信息，并返回实体主体。
2	HEAD	类似于 GET 请求，只不过返回的响应中没有具体的内容，用于获取报头
3	POST	向指定资源提交数据进行处理请求（例如提交表单或者上传文件）。数据被包含在请求体中。POST 请求可能会导致新的资源的建立和/或已有资源的修改。
4	PUT	从客户端向服务器传送的数据取代指定的文档的内容。
5	DELETE	请求服务器删除指定的页面。
6	CONNECT	HTTP/1.1 协议中预留给能够将连接改为管道方式的代理服务器。
7	OPTIONS	允许客户端查看服务器的性能。
8	TRACE	回显服务器收到的请求，主要用于测试或诊断。
9	PATCH	是对 PUT 方法的补充，用来对已知资源进行局部更新 。

## HTTPS和HTTP的区别
# http和https使用的是完全不同的连接方式，用的端口也不一样，前者是80，后者是443。
# HTTP协议传输的数据都是未加密的，也就是明文的，因此使用HTTP协议传输隐私信息非常不安全
# HTTPS协议是由SSL+HTTP协议构建的可进行加密传输、身份认证的网络协议，要比http协议安全。
# https协议需要到ca申请证书，一般免费证书较少，因而需要一定费用。 

21、HTTPS是如何保证数据传输的安全，整体的流程是什么？（SSL是怎么工作保证安全的）
SSL/TLS协议的基本思路是采用 # 公钥加密法 #
客户端先向服务器端索要公钥，然后用公钥加密信息，服务器收到密文后，用自己的私钥解密。
# 客户端向服务器端发起SSL连接请求；
# 服务器把公钥发送给客户端，并且服务器端保存着唯一的私钥
# 客户端用公钥对双方通信的对称秘钥进行加密，并发送给服务器端
# 服务器利用自己唯一的私钥对客户端发来的对称秘钥进行解密

# 进行数据传输，服务器和客户端双方用公有的相同的对称秘钥对数据进行加密解密，可以保证在数据收发过程中的安全，即是第三方获得数据包，也无法对其进行加密，解密和篡改。
# 因为数字签名、摘要是证书防伪非常关键的武器。
# “摘要”就是对传输的内容，通过hash算法计算出一段固定长度的串。然后，通过发送方的私钥对这段摘要进行加密，加密后得到的结果就是“数字签名”


